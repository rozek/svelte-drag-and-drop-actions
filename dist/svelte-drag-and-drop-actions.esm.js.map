{"version":3,"file":"svelte-drag-and-drop-actions.esm.js","sources":["../../javascript-interface-library/dist/javascript-interface-library.esm.js","../node_modules/svelte-coordinate-conversion/dist/svelte-coordinate-conversion.esm.js","../src/svelte-drag-and-drop-actions.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                        JavaScript Interface Library                        //\n//----------------------------------------------------------------------------//\n/**** get a reference to the \"global\" object ****/\nvar global = /*#__PURE__*/ Function('return this')();\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n//------------------------------------------------------------------------------\n//--                             Object Functions                             --\n//------------------------------------------------------------------------------\n// allow methods from Object.prototype to be applied to \"vanilla\" objects\n/**** Object_hasOwnProperty ****/\nfunction Object_hasOwnProperty(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('hasOwnProperty' in Value) && (typeof Value.hasOwnProperty === 'function')\n        ? Value.hasOwnProperty(PropertyName)\n        : Object.prototype.hasOwnProperty.call(Value, PropertyName));\n}\n/**** Object_isPrototypeOf ****/\nfunction Object_isPrototypeOf(Value, Candidate) {\n    return ((Value == null) || // let this method crash like its original\n        ('isPrototypeOf' in Value) && (typeof Value.isPrototypeOf === 'function')\n        ? Value.isPrototypeOf(Candidate)\n        : Object.prototype.isPrototypeOf.call(Value, Candidate));\n}\n/**** Object_propertyIsEnumerable ****/\nfunction Object_propertyIsEnumerable(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('propertyIsEnumerable' in Value) && (typeof Value.propertyIsEnumerable === 'function')\n        ? Value.propertyIsEnumerable(PropertyName)\n        : Object.prototype.propertyIsEnumerable.call(Value, PropertyName));\n}\n/**** Object_toString ****/\nfunction Object_toString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toString' in Value) && (typeof Value.toString === 'function')\n        ? Value.toString()\n        : Object.prototype.toString.call(Value));\n}\n/**** Object_toLocaleString ****/\nfunction Object_toLocaleString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toLocaleString' in Value) && (typeof Value.toLocaleString === 'function')\n        ? Value.toLocaleString()\n        : Object.prototype.toString.call(Value)); // a missing \"toLocaleString\" method will crash Object.prototype.toLocaleString\n}\n/**** Object_valueOf ****/\nfunction Object_valueOf(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('valueOf' in Value) && (typeof Value.valueOf === 'function')\n        ? Value.valueOf()\n        : Object.prototype.valueOf.call(Value));\n}\n/**** ObjectMergedWith ****/\nfunction ObjectMergedWith(TargetObject) {\n    var otherObjectList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherObjectList[_i - 1] = arguments[_i];\n    }\n    for (var i = 0, l = otherObjectList.length; i < l; i++) {\n        var otherObject = otherObjectList[i];\n        if (otherObject == null) {\n            continue;\n        }\n        if (typeof otherObject === 'object') {\n            for (var Key in otherObject) {\n                var Descriptor = Object.getOwnPropertyDescriptor(otherObject, Key);\n                if (Descriptor != null) {\n                    Object.defineProperty(TargetObject, Key, Descriptor);\n                }\n            }\n        }\n        else {\n            throwError('InvalidArgument: argument #' + (i + 1) + ' is not an object');\n        }\n    }\n    return TargetObject;\n}\n/**** throwError - simplifies construction of named errors ****/\nfunction throwError(Message) {\n    var Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message);\n    if (Match == null) {\n        throw new Error(Message);\n    }\n    else {\n        var namedError = new Error(Match[2]);\n        namedError.name = Match[1];\n        throw namedError;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Value Classification Functions                      --\n//------------------------------------------------------------------------------\n/**** ValueExists ****/\nfunction ValueExists(Value) {\n    return (Value != null);\n}\n/**** ValueIsMissing ****/\nfunction ValueIsMissing(Value) {\n    return (Value == null);\n}\n/**** ValueIsBoolean ****/\nfunction ValueIsBoolean(Value) {\n    return (typeof Value === 'boolean') || (Value instanceof Boolean);\n}\n/**** ValueIsNumber ****/\nfunction ValueIsNumber(Value) {\n    return (typeof Value === 'number') || (Value instanceof Number);\n}\n/**** ValueIsFiniteNumber (pure \"isFinite\" breaks on objects) ****/\nfunction ValueIsFiniteNumber(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isFinite(Value.valueOf());\n}\n/**** ValueIsNaN (numeric, but NaN - this differs from pure \"isNaN\") ****/\nfunction ValueIsNaN(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isNaN(Value.valueOf());\n}\n/**** ValueIsNumberInRange ****/\nfunction ValueIsNumberInRange(Value, minValue, maxValue, withMin, withMax) {\n    if (withMin === void 0) { withMin = true; }\n    if (withMax === void 0) { withMax = true; }\n    if (!ValueIsNumber(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (!withMin && (Value === minValue)) ||\n                (Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n        else {\n            if ((Value < minValue) || (!withMin && (Value === minValue))) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsInteger ****/\nfunction ValueIsInteger(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value);\n}\n/**** ValueIsIntegerInRange ****/\nfunction ValueIsIntegerInRange(Value, minValue, maxValue) {\n    if (!ValueIsInteger(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (Value > maxValue)) {\n                return false;\n            }\n        }\n        else {\n            if (Value < minValue) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if (Value > maxValue) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsOrdinal ****/\nfunction ValueIsOrdinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 0);\n}\n/**** ValueIsCardinal ****/\nfunction ValueIsCardinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 1);\n}\n/**** ValueIsString ****/\nfunction ValueIsString(Value) {\n    return (typeof Value === 'string') || (Value instanceof String);\n}\n/**** ValueIsNonEmptyString ****/\nvar emptyStringPattern = /^\\s*$/;\nfunction ValueIsNonEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && !emptyStringPattern.test(Value.valueOf());\n}\n/**** ValueIsStringMatching ****/\nfunction ValueIsStringMatching(Value, Pattern) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && Pattern.test(Value.valueOf());\n}\n/**** ValueIsText ****/\nvar noCtrlCharsButCRLFPattern = /^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsText(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsButCRLFPattern);\n}\n/**** ValueIsTextline ****/\nvar noCtrlCharsPattern = /^[^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsTextline(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsPattern);\n}\n/**** ValueIsFunction ****/\nfunction ValueIsFunction(Value) {\n    return (typeof Value === 'function');\n}\n/**** ValueIsAnonymousFunction ****/\nfunction ValueIsAnonymousFunction(Value) {\n    return ((typeof Value === 'function') &&\n        ((Value.name == null) || (Value.name === '')));\n}\n/**** ValueIsNamedFunction ****/\nfunction ValueIsNamedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        (Value.name != null) && (Value.name !== ''));\n}\n/**** ValueIsNativeFunction ****/\nfunction ValueIsNativeFunction(Value) {\n    return ((typeof Value === 'function') &&\n        /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsScriptedFunction ****/\nfunction ValueIsScriptedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        !/^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsObject ****/\nfunction ValueIsObject(Value) {\n    return (Value != null) && (typeof Value === 'object');\n}\n/**** ValueIsPlainObject ****/\nfunction ValueIsPlainObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        (Object.getPrototypeOf(Value) === Object.prototype));\n}\n/**** ValueIsVanillaObject ****/\nfunction ValueIsVanillaObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        !(Value instanceof Object));\n}\n/**** ValueIsArray ****/\nvar ValueIsArray = Array.isArray;\n/**** ValueIsList (\"dense\" array) ****/\nfunction ValueIsList(Value, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        for (var i = 0, l = Value.length; i < l; i++) {\n            if (Value[i] === undefined) {\n                return false;\n            }\n        }\n        if (minLength != null) {\n            if (Value.length < minLength) {\n                return false;\n            }\n        }\n        if (maxLength != null) {\n            if (Value.length > maxLength) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/**** ValueIsListSatisfying ****/\nfunction ValueIsListSatisfying(Value, Validator, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        try {\n            for (var i = 0, l = Value.length; i < l; i++) {\n                if (Validator(Value[i]) == false) {\n                    return false;\n                }\n            }\n            if (minLength != null) {\n                if (Value.length < minLength) {\n                    return false;\n                }\n            }\n            if (maxLength != null) {\n                if (Value.length > maxLength) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        catch (Signal) { /* nop */ }\n    }\n    return false;\n}\n/**** ValueIsInstanceOf ****/\nfunction ValueIsInstanceOf(Value, Constructor) {\n    return (Value instanceof Constructor);\n}\n/**** ValueInheritsFrom ****/\nfunction ValueInheritsFrom(Value, Prototype) {\n    return Object_isPrototypeOf(Prototype, Value);\n}\n/**** ValueIsDate ****/\nfunction ValueIsDate(Value) {\n    return (Value instanceof Date);\n}\n/**** ValueIsError ****/\nfunction ValueIsError(Value) {\n    return (Value instanceof Error);\n}\n/**** ValueIsPromise ****/\nfunction ValueIsPromise(Value) {\n    return (Value != null) && (typeof Value.then === 'function');\n}\n// see https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise\n/**** ValueIsRegExp ****/\nfunction ValueIsRegExp(Value) {\n    return (Value instanceof RegExp);\n}\n/**** ValueIsOneOf ****/\nfunction ValueIsOneOf(Value, ValueList) {\n    return (ValueList.indexOf(Value) >= 0);\n} // no automatic unboxing of boxed values and vice-versa!\n/**** ValueIsColor ****/\nfunction ValueIsColor(Value) {\n    return ValueIsString(Value) && (ColorSet.hasOwnProperty(Value) ||\n        /^#[a-fA-F0-9]{6}$/.test(Value) ||\n        /^#[a-fA-F0-9]{8}$/.test(Value) ||\n        /^rgb\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+\\)$/.test(Value) || // not perfect\n        /^rgba\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+,([01]|[0]?[.][0-9]+)\\)$/.test(Value) // dto.\n    );\n}\n/**** ValueIsEMailAddress ****/\nvar EMailAddressPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n// see https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression\nfunction ValueIsEMailAddress(Value) {\n    return ValueIsStringMatching(Value, EMailAddressPattern);\n}\n/**** ValueIsURL ****/\nvar noCtrlCharsOrWhitespacePattern = /^[^\\s\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsURL(Value) {\n    if (!ValueIsStringMatching(Value, noCtrlCharsOrWhitespacePattern) ||\n        (Value === '')) {\n        return false;\n    }\n    try {\n        new URL(Value, 'file://');\n        return true;\n    }\n    catch (Signal) {\n        return false;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Argument Validation Functions                       --\n//------------------------------------------------------------------------------\nvar rejectNil = false;\nvar acceptNil = true;\n/**** validatedArgument ****/\nfunction validatedArgument(Description, Argument, ValueIsValid, NilIsAcceptable, Expectation) {\n    if (Argument == null) {\n        if (NilIsAcceptable) {\n            return Argument;\n        }\n        else {\n            throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n        }\n    }\n    else {\n        if (ValueIsValid(Argument)) {\n            switch (true) {\n                case Argument instanceof Boolean:\n                case Argument instanceof Number:\n                case Argument instanceof String:\n                    return Argument.valueOf(); // unboxes any primitives\n                default:\n                    return Argument;\n            }\n        }\n        else {\n            throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no valid \" + escaped(Expectation));\n        }\n    }\n}\n/**** ValidatorForClassifier ****/\nfunction ValidatorForClassifier(Classifier, NilIsAcceptable, Expectation) {\n    var Validator = function (Description, Argument) {\n        return validatedArgument(Description, Argument, Classifier, NilIsAcceptable, Expectation);\n    };\n    var ClassifierName = Classifier.name;\n    if ((ClassifierName != null) && /^ValueIs/.test(ClassifierName)) {\n        var ValidatorName = ClassifierName.replace(// derive name from validator\n        /^ValueIs/, NilIsAcceptable ? 'allow' : 'expect');\n        return FunctionWithName(Validator, ValidatorName);\n    }\n    else {\n        return Validator; // without any specific name\n    }\n}\n/**** FunctionWithName (works with older JS engines as well) ****/\nfunction FunctionWithName(originalFunction, desiredName) {\n    if (originalFunction == null) {\n        throwError('MissingArgument: no function given');\n    }\n    if (typeof originalFunction !== 'function') {\n        throwError('InvalidArgument: the given 1st Argument is not a JavaScript function');\n    }\n    if (desiredName == null) {\n        throwError('MissingArgument: no desired name given');\n    }\n    if ((typeof desiredName !== 'string') && !(desiredName instanceof String)) {\n        throwError('InvalidArgument: the given desired name is not a string');\n    }\n    if (originalFunction.name === desiredName) {\n        return originalFunction;\n    }\n    try {\n        Object.defineProperty(originalFunction, 'name', { value: desiredName });\n        if (originalFunction.name === desiredName) {\n            return originalFunction;\n        }\n    }\n    catch (signal) { /* ok - let's take the hard way */ }\n    var renamed = new Function('originalFunction', 'return function ' + desiredName + ' () {' +\n        'return originalFunction.apply(this,Array.prototype.slice.apply(arguments))' +\n        '}');\n    return renamed(originalFunction);\n} // also works with older JavaScript engines\n/**** expect[ed]Value ****/\nfunction expectValue(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    else {\n        return Argument.valueOf();\n    }\n}\nvar expectedValue = expectValue;\n/**** allow/expect[ed]Boolean ****/\nvar allowBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, acceptNil, 'boolean value'), allowedBoolean = allowBoolean;\nvar expectBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, rejectNil, 'boolean value'), expectedBoolean = expectBoolean;\n/**** allow/expect[ed]Number ****/\nvar allowNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, acceptNil, 'numeric value'), allowedNumber = allowNumber;\nvar expectNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, rejectNil, 'numeric value'), expectedNumber = expectNumber;\n/**** allow/expect[ed]FiniteNumber ****/\nvar allowFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, acceptNil, 'finite numeric value'), allowedFiniteNumber = allowFiniteNumber;\nvar expectFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, rejectNil, 'finite numeric value'), expectedFiniteNumber = expectFiniteNumber;\n/**** allow/expect[ed]NaN ****/\nvar allowNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, acceptNil, 'NaN value'), allowedNaN = allowNaN;\nvar expectNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, rejectNil, 'NaN value'), expectedNaN = expectNaN;\n/**** allow[ed]NumberInRange ****/\nfunction allowNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    return (Argument == null\n        ? Argument\n        : expectedNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax));\n}\nvar allowedNumberInRange = allowNumberInRange;\n/**** expect[ed]NumberInRange ****/\nfunction expectNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    expectNumber(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if (withMin == null) {\n        withMin = true;\n    }\n    if (withMax == null) {\n        withMax = true;\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue)) ||\n                (Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" \" + (withMin ? '<' : '<=') + \" \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" \" + (withMax ? '>' : '>=') + \" \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedNumberInRange = expectNumberInRange;\n/**** allow/expect[ed]Integer ****/\nvar allowInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, acceptNil, 'integral numeric value'), allowedInteger = allowInteger;\nvar expectInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, rejectNil, 'integral numeric value'), expectedInteger = expectInteger;\n/**** allow[ed]IntegerInRange ****/\nfunction allowIntegerInRange(Description, Argument, minValue, maxValue) {\n    return (Argument == null\n        ? Argument\n        : expectedIntegerInRange(Description, Argument, minValue, maxValue));\n}\nvar allowedIntegerInRange = allowIntegerInRange;\n/**** expect[ed]IntegerInRange ****/\nfunction expectIntegerInRange(Description, Argument, minValue, maxValue) {\n    expectInteger(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not-a-number\");\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (Argument > maxValue)) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" (\" + Argument + \") is outside \" +\n                    (\"the allowed range (\" + minValue + \"...\" + maxValue + \")\"));\n            }\n        }\n        else {\n            if (Argument < minValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" is below the allowed \" +\n                    (\"minimum (\" + Argument + \" < \" + minValue + \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if (Argument > maxValue) {\n                throw new RangeError(\"the given \" + escaped(Description) + \" exceeds the allowed \" +\n                    (\"maximum (\" + Argument + \" > \" + maxValue + \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedIntegerInRange = expectIntegerInRange;\n/**** allow/expect[ed]Ordinal ****/\nvar allowOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, acceptNil, 'ordinal number'), allowedOrdinal = allowOrdinal;\nvar expectOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, rejectNil, 'ordinal number'), expectedOrdinal = expectOrdinal;\n/**** allow/expect[ed]Cardinal ****/\nvar allowCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, acceptNil, 'cardinal number'), allowedCardinal = allowCardinal;\nvar expectCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, rejectNil, 'cardinal number'), expectedCardinal = expectCardinal;\n/**** allow/expect[ed]String ****/\nvar allowString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, acceptNil, 'literal string'), allowedString = allowString;\nvar expectString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, rejectNil, 'literal string'), expectedString = expectString;\n/**** allow/expect[ed]NonEmptyString ****/\nvar allowNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, acceptNil, 'non-empty literal string'), allowedNonEmptyString = allowNonEmptyString;\nvar expectNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, rejectNil, 'non-empty literal string'), expectedNonEmptyString = expectNonEmptyString;\n/**** allow[ed]StringMatching ****/\nfunction allowStringMatching(Description, Argument, Pattern) {\n    return (Argument == null\n        ? Argument\n        : expectedStringMatching(Description, Argument, Pattern));\n}\nvar allowedStringMatching = allowStringMatching;\n/**** expect[ed]StringMatching ****/\nfunction expectStringMatching(Description, Argument, Pattern) {\n    expectString(Description, Argument);\n    if (Pattern.test(Argument)) {\n        return Argument.valueOf();\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" does not match the specified pattern\");\n    }\n}\nvar expectedStringMatching = expectStringMatching;\n/**** allow/expect[ed]Text ****/\nvar allowText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, acceptNil, 'literal text'), allowedText = allowText;\nvar expectText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, rejectNil, 'literal text'), expectedText = expectText;\n/**** allow/expect[ed]Textline ****/\nvar allowTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, acceptNil, 'single line of text'), allowedTextline = allowTextline;\nvar expectTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, rejectNil, 'single line of text'), expectedTextline = expectTextline;\n/**** allow/expect[ed]Function ****/\nvar allowFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, acceptNil, 'JavaScript function'), allowedFunction = allowFunction;\nvar expectFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, rejectNil, 'JavaScript function'), expectedFunction = expectFunction;\n/**** allow/expect[ed]AnonymousFunction ****/\nvar allowAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, acceptNil, 'anonymous JavaScript function'), allowedAnonymousFunction = allowAnonymousFunction;\nvar expectAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, rejectNil, 'anonymous JavaScript function'), expectedAnonymousFunction = expectAnonymousFunction;\n/**** allow/expect[ed]NamedFunction ****/\nvar allowNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, acceptNil, 'named JavaScript function'), allowedNamedFunction = allowNamedFunction;\nvar expectNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, rejectNil, 'named JavaScript function'), expectedNamedFunction = expectNamedFunction;\n/**** allow/expect[ed]NativeFunction ****/\nvar allowNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, acceptNil, 'native JavaScript function'), allowedNativeFunction = allowNativeFunction;\nvar expectNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, rejectNil, 'native JavaScript function'), expectedNativeFunction = expectNativeFunction;\n/**** allow/expect[ed]ScriptedFunction ****/\nvar allowScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, acceptNil, 'scripted JavaScript function'), allowedScriptedFunction = allowScriptedFunction;\nvar expectScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, rejectNil, 'scripted JavaScript function'), expectedScriptedFunction = expectScriptedFunction;\n/**** allow/expect[ed]Object ****/\nvar allowObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, acceptNil, 'JavaScript object'), allowedObject = allowObject;\nvar expectObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, rejectNil, 'JavaScript object'), expectedObject = expectObject;\n/**** allow/expect[ed]PlainObject ****/\nvar allowPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, acceptNil, '\"plain\" JavaScript object'), allowedPlainObject = allowPlainObject;\nvar expectPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, rejectNil, '\"plain\" JavaScript object'), expectedPlainObject = expectPlainObject;\n/**** allow/expect[ed]VanillaObject ****/\nvar allowVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, acceptNil, '\"vanilla\" JavaScript object'), allowedVanillaObject = allowVanillaObject;\nvar expectVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, rejectNil, '\"vanilla\" JavaScript object'), expectedVanillaObject = expectVanillaObject;\n/**** allow[ed]Array ****/\nfunction allowArray(Description, Argument) {\n    return (Argument == null\n        ? Argument\n        : expectedArray(Description, Argument));\n}\nvar allowedArray = allowArray;\n/**** expect[ed]Array ****/\nfunction expectArray(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsArray(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no JavaScript array\");\n    }\n}\nvar expectedArray = expectArray;\n/**** allow[ed]List ****/\nfunction allowList(Description, Argument, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedList(Description, Argument, Expectation, minLength, maxLength));\n}\nvar allowedList = allowList;\n/**** expect[ed]List ****/\nfunction expectList(Description, Argument, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsList(Argument, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains an invalid number of elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedList = expectList;\n/**** allow[ed]ListSatisfying ****/\nfunction allowListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength));\n}\nvar allowedListSatisfying = allowListSatisfying;\n/**** expect[ed]ListSatisfying ****/\nfunction expectListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsListSatisfying(Argument, Validator, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is \" + (Expectation == null\n            ? 'either not a list or contains invalid elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedListSatisfying = expectListSatisfying;\n/**** allow[ed]InstanceOf ****/\nfunction allowInstanceOf(Description, Argument, constructor, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedInstanceOf(Description, Argument, constructor, Expectation));\n}\nvar allowedInstanceOf = allowInstanceOf;\n/**** expect[ed]InstanceOf ****/\nfunction expectInstanceOf(Description, Argument, constructor, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (!(Argument instanceof constructor)) {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n    return Argument;\n}\nvar expectedInstanceOf = expectInstanceOf;\n/**** allow[ed]ValueInheritingFrom ****/\nfunction allowValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedValueInheritingFrom(Description, Argument, prototype, Expectation));\n}\nvar allowedValueInheritingFrom = allowValueInheritingFrom;\n/**** expect[ed]ValueInheritingFrom ****/\nfunction expectValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (prototype.isPrototypeOf(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is no \" + escaped(Expectation));\n    }\n}\nvar expectedValueInheritingFrom = expectValueInheritingFrom;\n/**** allow/expect[ed]Date ****/\nvar allowDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, acceptNil, 'JavaScript Date object'), allowedDate = allowDate;\nvar expectDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, rejectNil, 'JavaScript Date object'), expectedDate = expectDate;\n/**** allow/expect[ed]Error ****/\nvar allowError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, acceptNil, 'JavaScript Error object'), allowedError = allowError;\nvar expectError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, rejectNil, 'JavaScript Error object'), expectedError = expectError;\n/**** allow/expect[ed]Promise ****/\nvar allowPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, acceptNil, 'JavaScript Promise (or \"Thenable\") object'), allowedPromise = allowPromise;\nvar expectPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, rejectNil, 'JavaScript Promise (or \"Thenable\") object'), expectedPromise = expectPromise;\n/**** allow/expect[ed]RegExp ****/\nvar allowRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, acceptNil, 'JavaScript RegExp object'), allowedRegExp = allowRegExp;\nvar expectRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, rejectNil, 'JavaScript RegExp object'), expectedRegExp = expectRegExp;\n/**** allow[ed]OneOf ****/\nfunction allowOneOf(Description, Argument, ValueList) {\n    return (Argument == null\n        ? Argument\n        : expectedOneOf(Description, Argument, ValueList));\n}\nvar allowedOneOf = allowOneOf;\n/**** expect[ed]OneOf ****/\nfunction expectOneOf(Description, Argument, ValueList) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \" + escaped(Description) + \" given\");\n    }\n    if (ValueIsOneOf(Argument, ValueList)) {\n        return ( // unboxes any primitives\n        (Argument == null) || (typeof Argument.valueOf !== 'function')\n            ? Argument\n            : Argument.valueOf());\n    }\n    else {\n        throwError(\"InvalidArgument: the given \" + escaped(Description) + \" is not among the supported values\");\n    }\n}\nvar expectedOneOf = expectOneOf;\n/**** allow/expect[ed]Color ****/\nvar allowColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, acceptNil, 'valid CSS color specification'), allowedColor = allowColor;\nvar expectColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, rejectNil, 'valid CSS color specification'), expectedColor = expectColor;\n/**** allow/expect[ed]EMailAddress ****/\nvar allowEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, acceptNil, 'valid EMail address'), allowedEMailAddress = allowEMailAddress;\nvar expectEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, rejectNil, 'valid EMail address'), expectedEMailAddress = expectEMailAddress;\n/**** allow/expect[ed]URL ****/\nvar allowURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, acceptNil, 'valid URL'), allowedURL = allowURL;\nvar expectURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, rejectNil, 'valid URL'), expectedURL = expectURL;\n/**** escaped - escapes all control characters in a given string ****/\nfunction escaped(Text) {\n    var EscapeSequencePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        return (Match === '\\\\' ? '\\\\\\\\' : Match);\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** unescaped - evaluates all escape sequences in a given string ****/\nfunction unescaped(Text) {\n    var EscapeSequencePattern = /\\\\[0bfnrtv'\"\\\\\\/]|\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        switch (Match) {\n            case '\\\\0': return '\\0';\n            case '\\\\b': return '\\b';\n            case '\\\\f': return '\\f';\n            case '\\\\n': return '\\n';\n            case '\\\\r': return '\\r';\n            case '\\\\t': return '\\t';\n            case '\\\\v': return '\\v';\n            case '\\\\\\'': return \"'\";\n            case '\\\\\"': return '\"';\n            case '\\\\\\\\': return \"\\\\\";\n            default: {\n                var CharCode = parseInt(Match.slice(2), 16);\n                return String.fromCharCode(CharCode);\n            }\n        }\n    });\n}\n/**** quotable - makes a given string ready to be put in single/double quotes ****/\nfunction quotable(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    var EscSeqOrSglQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|'/g;\n    var EscSeqOrDblQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|\"/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(Quote === \"'\" ? EscSeqOrSglQuotePattern : EscSeqOrDblQuotePattern, function (Match) {\n        switch (Match) {\n            case \"'\": return \"\\\\'\";\n            case '\"': return '\\\\\"';\n            case '\\\\': return '\\\\\\\\';\n            default: return Match;\n        }\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** quoted ****/\nfunction quoted(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    return Quote + quotable(Text, Quote) + Quote;\n}\n/**** HTMLsafe ****/\nfunction HTMLsafe(Argument, EOLReplacement) {\n    EOLReplacement = (EOLReplacement || '').trim() || '<br/>';\n    return Argument.replace(/[&<>\"'\\u0000-\\u001F\\u007F-\\u009F\\\\]/g, function (Match) {\n        switch (Match) {\n            case '&': return '&amp;';\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case \"'\": return '&apos;';\n            case '\\b': return '&#92;b';\n            case '\\f': return '&#92;f';\n            case '\\n': return EOLReplacement;\n            case '\\r': return '&#92;r';\n            case '\\t': return '&#92;t';\n            case '\\v': return '&#92;v';\n            case '\\\\': return '&#92;';\n            default:\n                var Result = Match.charCodeAt(0).toString(16);\n                return '&#x0000'.substring(3, 7 - Result.length) + Result + ';';\n        }\n    });\n}\n/**** MarkDownSafe ****/\nfunction MarkDownSafe(Argument, EOLReplacement) {\n    return HTMLsafe(Argument, EOLReplacement).replace(/:/g, '&#58;');\n}\n/**** ValuesDiffer ****/\nfunction ValuesDiffer(thisValue, otherValue) {\n    if (thisValue === otherValue) {\n        return false;\n    }\n    var thisType = typeof thisValue;\n    if (thisType !== typeof otherValue) {\n        return true;\n    }\n    /**** ArraysDiffer ****/\n    function ArraysDiffer(thisArray, otherArray) {\n        if (!Array.isArray(otherArray)) {\n            return true;\n        }\n        if (thisArray.length !== otherArray.length) {\n            return true;\n        }\n        for (var i = 0, l = thisArray.length; i < l; i++) {\n            if (ValuesDiffer(thisArray[i], otherArray[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**** ObjectsDiffer ****/\n    function ObjectsDiffer(thisObject, otherObject) {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n            return true;\n        }\n        for (var key in thisObject) {\n            if (!(key in otherObject)) {\n                return true;\n            }\n        }\n        for (var key in otherObject) {\n            if (!(key in thisObject)) {\n                return true;\n            }\n            if (ValuesDiffer(thisObject[key], otherObject[key])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    switch (thisType) {\n        case 'undefined':\n        case 'boolean':\n        case 'string':\n        case 'function': return true; // most primitives are compared using \"===\"\n        case 'number': return ((isNaN(thisValue) !== isNaN(otherValue)) ||\n            (Math.abs(thisValue - otherValue) > Number.EPSILON));\n        case 'object':\n            if (thisValue == null) {\n                return true;\n            } // since \"other_value\" != null!\n            if (otherValue == null) {\n                return true;\n            } // since \"this_value\" != null!\n            if (Array.isArray(thisValue)) {\n                return ArraysDiffer(thisValue, otherValue);\n            }\n            return ObjectsDiffer(thisValue, otherValue);\n        default: return true; // unsupported property type\n    }\n    return true;\n}\n/**** ValuesAreEqual ****/\nfunction ValuesAreEqual(thisValue, otherValue) {\n    return !ValuesDiffer(thisValue, otherValue);\n}\n/**** ObjectIsEmpty ****/\nfunction ObjectIsEmpty(Candidate) {\n    expectObject('candidate', Candidate);\n    for (var Key in Candidate) {\n        if (Object_hasOwnProperty(Candidate, Key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**** ObjectIsNotEmpty ****/\nfunction ObjectIsNotEmpty(Candidate) {\n    return !ObjectIsEmpty(Candidate);\n}\n/**** StringIsEmpty ****/\nfunction StringIsEmpty(Candidate) {\n    return /^\\s*$/.test(Candidate);\n}\n/**** StringIsNotEmpty ****/\nfunction StringIsNotEmpty(Candidate) {\n    return !StringIsEmpty(Candidate);\n}\n/**** constrained ****/\nfunction constrained(Value, Minimum, Maximum) {\n    if (Minimum === void 0) { Minimum = -Infinity; }\n    if (Maximum === void 0) { Maximum = Infinity; }\n    return Math.max(Minimum, Math.min(Value, Maximum));\n}\n//------------------------------------------------------------------------------\n//--                             Color Utilities                              --\n//------------------------------------------------------------------------------\n// built-in color names (see http://www.w3.org/TR/SVG/types.html#ColorKeywords) ----\nvar ColorSet = {\n    transparent: 'rgba(0,0,0,0,0.0)',\n    aliceblue: 'rgba(240,248,255,1.0)', lightpink: 'rgba(255,182,193,1.0)',\n    antiquewhite: 'rgba(250,235,215,1.0)', lightsalmon: 'rgba(255,160,122,1.0)',\n    aqua: 'rgba(0,255,255,1.0)', lightseagreen: 'rgba(32,178,170,1.0)',\n    aquamarine: 'rgba(127,255,212,1.0)', lightskyblue: 'rgba(135,206,250,1.0)',\n    azure: 'rgba(240,255,255,1.0)', lightslategray: 'rgba(119,136,153,1.0)',\n    beige: 'rgba(245,245,220,1.0)', lightslategrey: 'rgba(119,136,153,1.0)',\n    bisque: 'rgba(255,228,196,1.0)', lightsteelblue: 'rgba(176,196,222,1.0)',\n    black: 'rgba(0,0,0,1.0)', lightyellow: 'rgba(255,255,224,1.0)',\n    blanchedalmond: 'rgba(255,235,205,1.0)', lime: 'rgba(0,255,0,1.0)',\n    blue: 'rgba(0,0,255,1.0)', limegreen: 'rgba(50,205,50,1.0)',\n    blueviolet: 'rgba(138,43,226,1.0)', linen: 'rgba(250,240,230,1.0)',\n    brown: 'rgba(165,42,42,1.0)', magenta: 'rgba(255,0,255,1.0)',\n    burlywood: 'rgba(222,184,135,1.0)', maroon: 'rgba(128,0,0,1.0)',\n    cadetblue: 'rgba(95,158,160,1.0)', mediumaquamarine: 'rgba(102,205,170,1.0)',\n    chartreuse: 'rgba(127,255,0,1.0)', mediumblue: 'rgba(0,0,205,1.0)',\n    chocolate: 'rgba(210,105,30,1.0)', mediumorchid: 'rgba(186,85,211,1.0)',\n    coral: 'rgba(255,127,80,1.0)', mediumpurple: 'rgba(147,112,219,1.0)',\n    cornflowerblue: 'rgba(100,149,237,1.0)', mediumseagreen: 'rgba(60,179,113,1.0)',\n    cornsilk: 'rgba(255,248,220,1.0)', mediumslateblue: 'rgba(123,104,238,1.0)',\n    crimson: 'rgba(220,20,60,1.0)', mediumspringgreen: 'rgba(0,250,154,1.0)',\n    cyan: 'rgba(0,255,255,1.0)', mediumturquoise: 'rgba(72,209,204,1.0)',\n    darkblue: 'rgba(0,0,139,1.0)', mediumvioletred: 'rgba(199,21,133,1.0)',\n    darkcyan: 'rgba(0,139,139,1.0)', midnightblue: 'rgba(25,25,112,1.0)',\n    darkgoldenrod: 'rgba(184,134,11,1.0)', mintcream: 'rgba(245,255,250,1.0)',\n    darkgray: 'rgba(169,169,169,1.0)', mistyrose: 'rgba(255,228,225,1.0)',\n    darkgreen: 'rgba(0,100,0,1.0)', moccasin: 'rgba(255,228,181,1.0)',\n    darkgrey: 'rgba(169,169,169,1.0)', navajowhite: 'rgba(255,222,173,1.0)',\n    darkkhaki: 'rgba(189,183,107,1.0)', navy: 'rgba(0,0,128,1.0)',\n    darkmagenta: 'rgba(139,0,139,1.0)', oldlace: 'rgba(253,245,230,1.0)',\n    darkolivegreen: 'rgba(85,107,47,1.0)', olive: 'rgba(128,128,0,1.0)',\n    darkorange: 'rgba(255,140,0,1.0)', olivedrab: 'rgba(107,142,35,1.0)',\n    darkorchid: 'rgba(153,50,204,1.0)', orange: 'rgba(255,165,0,1.0)',\n    darkred: 'rgba(139,0,0,1.0)', orangered: 'rgba(255,69,0,1.0)',\n    darksalmon: 'rgba(233,150,122,1.0)', orchid: 'rgba(218,112,214,1.0)',\n    darkseagreen: 'rgba(143,188,143,1.0)', palegoldenrod: 'rgba(238,232,170,1.0)',\n    darkslateblue: 'rgba(72,61,139,1.0)', palegreen: 'rgba(152,251,152,1.0)',\n    darkslategray: 'rgba(47,79,79,1.0)', paleturquoise: 'rgba(175,238,238,1.0)',\n    darkslategrey: 'rgba(47,79,79,1.0)', palevioletred: 'rgba(219,112,147,1.0)',\n    darkturquoise: 'rgba(0,206,209,1.0)', papayawhip: 'rgba(255,239,213,1.0)',\n    darkviolet: 'rgba(148,0,211,1.0)', peachpuff: 'rgba(255,218,185,1.0)',\n    deeppink: 'rgba(255,20,147,1.0)', peru: 'rgba(205,133,63,1.0)',\n    deepskyblue: 'rgba(0,191,255,1.0)', pink: 'rgba(255,192,203,1.0)',\n    dimgray: 'rgba(105,105,105,1.0)', plum: 'rgba(221,160,221,1.0)',\n    dimgrey: 'rgba(105,105,105,1.0)', powderblue: 'rgba(176,224,230,1.0)',\n    dodgerblue: 'rgba(30,144,255,1.0)', purple: 'rgba(128,0,128,1.0)',\n    firebrick: 'rgba(178,34,34,1.0)', red: 'rgba(255,0,0,1.0)',\n    floralwhite: 'rgba(255,250,240,1.0)', rosybrown: 'rgba(188,143,143,1.0)',\n    forestgreen: 'rgba(34,139,34,1.0)', royalblue: 'rgba(65,105,225,1.0)',\n    fuchsia: 'rgba(255,0,255,1.0)', saddlebrown: 'rgba(139,69,19,1.0)',\n    gainsboro: 'rgba(220,220,220,1.0)', salmon: 'rgba(250,128,114,1.0)',\n    ghostwhite: 'rgba(248,248,255,1.0)', sandybrown: 'rgba(244,164,96,1.0)',\n    gold: 'rgba(255,215,0,1.0)', seagreen: 'rgba(46,139,87,1.0)',\n    goldenrod: 'rgba(218,165,32,1.0)', seashell: 'rgba(255,245,238,1.0)',\n    gray: 'rgba(128,128,128,1.0)', sienna: 'rgba(160,82,45,1.0)',\n    green: 'rgba(0,128,0,1.0)', silver: 'rgba(192,192,192,1.0)',\n    greenyellow: 'rgba(173,255,47,1.0)', skyblue: 'rgba(135,206,235,1.0)',\n    grey: 'rgba(128,128,128,1.0)', slateblue: 'rgba(106,90,205,1.0)',\n    honeydew: 'rgba(240,255,240,1.0)', slategray: 'rgba(112,128,144,1.0)',\n    hotpink: 'rgba(255,105,180,1.0)', slategrey: 'rgba(112,128,144,1.0)',\n    indianred: 'rgba(205,92,92,1.0)', snow: 'rgba(255,250,250,1.0)',\n    indigo: 'rgba(75,0,130,1.0)', springgreen: 'rgba(0,255,127,1.0)',\n    ivory: 'rgba(255,255,240,1.0)', steelblue: 'rgba(70,130,180,1.0)',\n    khaki: 'rgba(240,230,140,1.0)', tan: 'rgba(210,180,140,1.0)',\n    lavender: 'rgba(230,230,250,1.0)', teal: 'rgba(0,128,128,1.0)',\n    lavenderblush: 'rgba(255,240,245,1.0)', thistle: 'rgba(216,191,216,1.0)',\n    lawngreen: 'rgba(124,252,0,1.0)', tomato: 'rgba(255,99,71,1.0)',\n    lemonchiffon: 'rgba(255,250,205,1.0)', turquoise: 'rgba(64,224,208,1.0)',\n    lightblue: 'rgba(173,216,230,1.0)', violet: 'rgba(238,130,238,1.0)',\n    lightcoral: 'rgba(240,128,128,1.0)', wheat: 'rgba(245,222,179,1.0)',\n    lightcyan: 'rgba(224,255,255,1.0)', white: 'rgba(255,255,255,1.0)',\n    lightgoldenrodyellow: 'rgba(250,250,210,1.0)', whitesmoke: 'rgba(245,245,245,1.0)',\n    lightgray: 'rgba(211,211,211,1.0)', yellow: 'rgba(255,255,0,1.0)',\n    lightgreen: 'rgba(144,238,144,1.0)', yellowgreen: 'rgba(154,205,50,1.0)',\n    lightgrey: 'rgba(211,211,211,1.0)',\n};\n/**** HexColor - converts a given color to #rrggbbaa ****/\nfunction HexColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        Color = ColorSet[lowerColor];\n    } // do not return here as color is now in RGBA format\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return Color + 'FF';\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return Color;\n    }\n    var HexDigit = '0123456789ABCDEF';\n    function dec2hex(Value) {\n        if (Value > 255) {\n            Value = 255;\n        }\n        return HexDigit[Math.trunc(Value / 16)] + HexDigit[Value % 16];\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; // not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) + 'FF');\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([01]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) +\n            dec2hex(parseFloat(Match[4])));\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** RGBAColor - converts a given color to RGBA(r,g,b,a) ****/\nfunction RGBAColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        return ColorSet[lowerColor]; // color is already in RGBA format\n    }\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ', 1' +\n            ')');\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ',' +\n            (parseInt(Color.slice(7), 16) / 255) +\n            ')');\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; //not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return Color.slice(0, Color.length - 1) + ',1)';\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([0]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return Color;\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** shortHexColor - converts a given color into #RRGGBB ****/\nfunction shortHexColor(Color) {\n    return HexColor(Color).slice(0, 7);\n}\n\nexport { ColorSet, FunctionWithName, HTMLsafe, HexColor, MarkDownSafe, ObjectIsEmpty, ObjectIsNotEmpty, ObjectMergedWith, Object_hasOwnProperty, Object_isPrototypeOf, Object_propertyIsEnumerable, Object_toLocaleString, Object_toString, Object_valueOf, RGBAColor, StringIsEmpty, StringIsNotEmpty, ValidatorForClassifier, ValueExists, ValueInheritsFrom, ValueIsAnonymousFunction, ValueIsArray, ValueIsBoolean, ValueIsCardinal, ValueIsColor, ValueIsDate, ValueIsEMailAddress, ValueIsError, ValueIsFiniteNumber, ValueIsFunction, ValueIsInstanceOf, ValueIsInteger, ValueIsIntegerInRange, ValueIsList, ValueIsListSatisfying, ValueIsMissing, ValueIsNaN, ValueIsNamedFunction, ValueIsNativeFunction, ValueIsNonEmptyString, ValueIsNumber, ValueIsNumberInRange, ValueIsObject, ValueIsOneOf, ValueIsOrdinal, ValueIsPlainObject, ValueIsPromise, ValueIsRegExp, ValueIsScriptedFunction, ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline, ValueIsURL, ValueIsVanillaObject, ValuesAreEqual, ValuesDiffer, acceptNil, allowAnonymousFunction, allowArray, allowBoolean, allowCardinal, allowColor, allowDate, allowEMailAddress, allowError, allowFiniteNumber, allowFunction, allowInstanceOf, allowInteger, allowIntegerInRange, allowList, allowListSatisfying, allowNaN, allowNamedFunction, allowNativeFunction, allowNonEmptyString, allowNumber, allowNumberInRange, allowObject, allowOneOf, allowOrdinal, allowPlainObject, allowPromise, allowRegExp, allowScriptedFunction, allowString, allowStringMatching, allowText, allowTextline, allowURL, allowValueInheritingFrom, allowVanillaObject, allowedAnonymousFunction, allowedArray, allowedBoolean, allowedCardinal, allowedColor, allowedDate, allowedEMailAddress, allowedError, allowedFiniteNumber, allowedFunction, allowedInstanceOf, allowedInteger, allowedIntegerInRange, allowedList, allowedListSatisfying, allowedNaN, allowedNamedFunction, allowedNativeFunction, allowedNonEmptyString, allowedNumber, allowedNumberInRange, allowedObject, allowedOneOf, allowedOrdinal, allowedPlainObject, allowedPromise, allowedRegExp, allowedScriptedFunction, allowedString, allowedStringMatching, allowedText, allowedTextline, allowedURL, allowedValueInheritingFrom, allowedVanillaObject, constrained, escaped, expectAnonymousFunction, expectArray, expectBoolean, expectCardinal, expectColor, expectDate, expectEMailAddress, expectError, expectFiniteNumber, expectFunction, expectInstanceOf, expectInteger, expectIntegerInRange, expectList, expectListSatisfying, expectNaN, expectNamedFunction, expectNativeFunction, expectNonEmptyString, expectNumber, expectNumberInRange, expectObject, expectOneOf, expectOrdinal, expectPlainObject, expectPromise, expectRegExp, expectScriptedFunction, expectString, expectStringMatching, expectText, expectTextline, expectURL, expectValue, expectValueInheritingFrom, expectVanillaObject, expectedAnonymousFunction, expectedArray, expectedBoolean, expectedCardinal, expectedColor, expectedDate, expectedEMailAddress, expectedError, expectedFiniteNumber, expectedFunction, expectedInstanceOf, expectedInteger, expectedIntegerInRange, expectedList, expectedListSatisfying, expectedNaN, expectedNamedFunction, expectedNativeFunction, expectedNonEmptyString, expectedNumber, expectedNumberInRange, expectedObject, expectedOneOf, expectedOrdinal, expectedPlainObject, expectedPromise, expectedRegExp, expectedScriptedFunction, expectedString, expectedStringMatching, expectedText, expectedTextline, expectedURL, expectedValue, expectedValueInheritingFrom, expectedVanillaObject, global, quotable, quoted, rejectNil, shortHexColor, throwError, unescaped, validatedArgument };\n//# sourceMappingURL=javascript-interface-library.esm.js.map\n","var e={fromViewportTo:function(e,t,o){switch(!0){case null==t:throw new Error('no \"Position\" given');case\"number\"!=typeof t.left&&!(t.left instanceof Number):case\"number\"!=typeof t.top&&!(t.top instanceof Number):throw new Error('invalid \"Position\" given')}switch(e){case null:case void 0:throw new Error(\"no coordinate system given\");case\"viewport\":return{left:t.left,top:t.top};case\"document\":return{left:t.left+window.scrollX,top:t.top+window.scrollY};case\"local\":switch(!0){case null==o:throw new Error(\"no target element given\");case o instanceof Element:var r=window.getComputedStyle(o),n=parseFloat(r.borderLeftWidth),i=parseFloat(r.borderTopWidth),l=o.getBoundingClientRect();return{left:t.left-l.left-n,top:t.top-l.top-i};default:throw new Error(\"invalid target element given\")}default:throw new Error(\"invalid coordinate system given\")}},fromDocumentTo:function(e,t,o){switch(!0){case null==t:throw new Error('no \"Position\" given');case\"number\"!=typeof t.left&&!(t.left instanceof Number):case\"number\"!=typeof t.top&&!(t.top instanceof Number):throw new Error('invalid \"Position\" given')}switch(e){case null:case void 0:throw new Error(\"no coordinate system given\");case\"viewport\":return{left:t.left-window.scrollX,top:t.top-window.scrollY};case\"document\":return{left:t.left,top:t.top};case\"local\":switch(!0){case null==o:throw new Error(\"no target element given\");case o instanceof Element:var r=window.getComputedStyle(o),n=parseFloat(r.borderLeftWidth),i=parseFloat(r.borderTopWidth),l=o.getBoundingClientRect();return{left:t.left+window.scrollX-l.left-n,top:t.top+window.scrollY-l.top-i};default:throw new Error(\"invalid target element given\")}default:throw new Error(\"invalid coordinate system given\")}},fromLocalTo:function(e,t,o){switch(!0){case null==t:throw new Error('no \"Position\" given');case\"number\"!=typeof t.left&&!(t.left instanceof Number):case\"number\"!=typeof t.top&&!(t.top instanceof Number):throw new Error('invalid \"Position\" given')}var r,n,i;switch(!0){case null==o:throw new Error(\"no source element given\");case o instanceof Element:var l=window.getComputedStyle(o),a=parseFloat(l.borderLeftWidth),s=parseFloat(l.borderTopWidth);n=(r=o.getBoundingClientRect()).left+a,i=r.top+s;break;default:throw new Error(\"invalid source element given\")}switch(e){case null:case void 0:throw new Error(\"no coordinate system given\");case\"viewport\":return{left:t.left+n,top:t.top+i};case\"document\":return{left:t.left+n+window.scrollX,top:t.top+i+window.scrollY};case\"local\":return{left:t.left,top:t.top};default:throw new Error(\"invalid coordinate system given\")}}};export default e;\n//# sourceMappingURL=svelte-coordinate-conversion.esm.js.map\n","//----------------------------------------------------------------------------//\n//                        Svelte Drag-and-Drop Actions                        //\n//----------------------------------------------------------------------------//\n\n  import {\n    throwError,\n    ValueIsFiniteNumber, ValueIsString, ValueIsNonEmptyString,\n    ValueIsFunction, ValueIsPlainObject, ValueIsOneOf,\n    allowedFiniteNumber, allowedIntegerInRange, allowedString, allowedNonEmptyString,\n    allowPlainObject, allowedPlainObject,\n    allowListSatisfying, allowedFunction,\n    ObjectIsNotEmpty, quoted, constrained\n  } from 'javascript-interface-library'\n\n  import Conversion from 'svelte-coordinate-conversion'\n\nconsole.log('>>>> svelte-drag-and-drop-actions')\n//-------------------------------------------------------------------------------\n//--             use:asDraggable={options} - \"drag\" without \"drop\"             --\n//-------------------------------------------------------------------------------\n\n  export type PositionReference = (\n    'parent' | 'body' | string | HTMLElement | SVGElement // | MathMLElement\n  )\n\n  export type Position = { x:number, y:number }\n\n  export type DragDummy = (\n    string | HTMLElement | SVGElement | // MathMLElement |\n    ((DraggableExtras:any, Element:HTMLElement|SVGElement) => HTMLElement|SVGElement) |\n    'standard' | 'none'\n  ) | null | undefined\n\n  type DraggableOptions = {\n    Extras?:any,\n    relativeTo?:PositionReference, onlyFrom?:string, neverFrom?:string,\n    Dummy?:DragDummy, DummyOffsetX?:number, DummyOffsetY?:number,\n    minX?:number, minY?:number, maxX?:number, maxY?:number,\n    onDragStart?:Position | ((DraggableExtras:any) => Position),\n    onDragMove?: (x:number,y:number, dx:number,dy:number, DraggableExtras:any) => void,\n    onDragEnd?:  (x:number,y:number, dx:number,dy:number, DraggableExtras:any) => void,\n  }\n\n/**** parsedDraggableOptions ****/\n\n  function parsedDraggableOptions (Options:any):DraggableOptions {\n    Options = allowedPlainObject('drag options',Options) || {}\n\n    let Extras:any, relativeTo:PositionReference\n    let onlyFrom:string|undefined, neverFrom:string|undefined\n    let Dummy:DragDummy, DummyOffsetX:number, DummyOffsetY:number\n    let minX:number, minY:number, maxX:number, maxY:number\n    let onDragStart:Function, onDragMove:Function, onDragEnd:Function, onDragCancel:Function\n\n    Extras = Options.Extras\n\n    switch (true) {\n      case (Options.relativeTo == null):\n        relativeTo = 'parent'; break\n      case (Options.relativeTo === 'parent'):\n      case (Options.relativeTo === 'body'):\n      case ValueIsNonEmptyString(Options.relativeTo):\n      case (Options.relativeTo instanceof HTMLElement):\n      case (Options.relativeTo instanceof SVGElement):\n//    case (Options.relativeTo instanceof MathMLElement):\n        relativeTo = Options.relativeTo as PositionReference; break\n      default: throwError(\n        'InvalidArgument: invalid position reference given'\n      )\n    }\n\n    onlyFrom  = allowedNonEmptyString ('\"onlyFrom\" CSS selector',Options.onlyFrom)\n    neverFrom = allowedNonEmptyString('\"neverFrom\" CSS selector',Options.neverFrom)\n\n    switch (true) {\n      case (Options.Dummy == null):\n        Dummy = undefined; break\n      case (Options.Dummy === 'standard'):\n      case (Options.Dummy === 'none'):\n      case ValueIsNonEmptyString(Options.Dummy):\n      case (Options.Dummy instanceof HTMLElement):\n      case (Options.Dummy instanceof SVGElement):\n//    case (Options.Dummy instanceof MathMLElement):\n      case ValueIsFunction(Options.Dummy):\n        Dummy = Options.Dummy as DragDummy; break\n      default: throwError(\n        'InvalidArgument: invalid drag dummy specification given'\n      )\n    }\n\n    DummyOffsetX = allowedFiniteNumber('dummy x offset',Options.DummyOffsetX)\n    DummyOffsetY = allowedFiniteNumber('dummy y offset',Options.DummyOffsetY)\n\n    minX = allowedFiniteNumber('min. x position',Options.minX)\n      if (minX == null) { minX = -Infinity }\n    minY = allowedFiniteNumber('min. y position',Options.minY)\n      if (minY == null) { minY = -Infinity }\n    maxX = allowedFiniteNumber('max. x position',Options.maxX)\n      if (maxX == null) { maxX = Infinity }\n    maxY = allowedFiniteNumber('max. y position',Options.maxY)\n      if (maxY == null) { maxY = Infinity }\n\n    if (ValueIsPosition(Options.onDragStart)) {\n      let { x,y } = Options.onDragStart as Position\n      onDragStart = () => ({x,y})\n    } else {\n      onDragStart = allowedFunction('\"onDragStart\" handler', Options.onDragStart)\n    }\n\n    onDragMove = allowedFunction('\"onDragMove\" handler', Options.onDragMove)\n    onDragEnd  = allowedFunction('\"onDragEnd\" handler',  Options.onDragEnd)\n\n    return {\n      Extras, relativeTo, onlyFrom,neverFrom, Dummy, DummyOffsetX,DummyOffsetY,\n      minX,minY, maxX,maxY,\n// @ts-ignore we cannot validate given functions any further\n      onDragStart, onDragMove, onDragEnd, onDragCancel\n    }\n  }\n\n/**** use:asDraggable={options} ****/\n\n  export function asDraggable (\n    Element:HTMLElement|SVGElement, Options:DraggableOptions\n  ) {\n    let isDragged:boolean\n    let currentDraggableOptions:DraggableOptions\n\n    let PositionReference:Element         // element with user coordinate system\n    let ReferenceDeltaX:number, ReferenceDeltaY:number  // mouse -> user coord.s\n    let PositioningWasDelayed:boolean // workaround for prob. with \"drag\" events\n    let DragImage:Element | undefined\n    let initialPosition:Position                    // given in user coordinates\n    let lastPosition:   Position                                         // dto.\n\n    isDragged = false\n\n    currentDraggableOptions = parsedDraggableOptions(Options)\n\n  /**** startDragging ****/\n\n    function startDragging (originalEvent:DragEvent) {\n      let Options = currentDraggableOptions\n\n      if (fromForbiddenElement(Element,Options,originalEvent)) {\n        originalEvent.stopPropagation()\n        originalEvent.preventDefault()\n        return false\n      }\n\n      PositionReference = PositionReferenceFor(Element,Options)\n\n      let relativePosition = Conversion.fromDocumentTo(\n        'local', { left:originalEvent.pageX, top:originalEvent.pageY }, PositionReference\n      )                                         // relative to reference element\n\n      ReferenceDeltaX = ReferenceDeltaY = 0; initialPosition = { x:0,y:0 }\n      if (Options.onDragStart == null) {\n        initialPosition = { x:0,y:0 }               // given in user coordinates\n      } else {\n        try {\n          let StartPosition = (Options.onDragStart as Function)(Options.Extras)\n          if (ValueIsPlainObject(StartPosition)) {\n            let x = allowedFiniteNumber('x start position',StartPosition.x)\n            let y = allowedFiniteNumber('y start position',StartPosition.y)\n\n            ReferenceDeltaX = x - relativePosition.left\n            ReferenceDeltaY = y - relativePosition.top\n\n            x = constrained(x, Options.minX,Options.maxX)\n            y = constrained(y, Options.minY,Options.maxY)\n\n            initialPosition = { x,y }               // given in user coordinates\n          }\n        } catch (Signal) {\n          console.error('\"onDragStart\" handler failed',Signal)\n        }\n      }\n\n      lastPosition = initialPosition\n\n      PositioningWasDelayed = false                    // initializes workaround\n\n      if (Options.Dummy == null) {\n        Options.Dummy = 'none'      // this is the default for \"use.asDraggable\"\n      }\n\n      DragImage = DragImageFor(Element,Options)\n      if ((DragImage != null) && (originalEvent.dataTransfer != null)) {\n        let OffsetX = Options.DummyOffsetX as number\n        let OffsetY = Options.DummyOffsetY as number\n\n        if ((OffsetX == null) || (OffsetY == null)) {\n          let PositionInDraggable = Conversion.fromDocumentTo(\n            'local', { left:originalEvent.pageX, top:originalEvent.pageY }, Element\n          )\n\n          if (OffsetX == null) { OffsetX = PositionInDraggable.left }\n          if (OffsetY == null) { OffsetY = PositionInDraggable.top }\n        }\n\n        switch (true) {\n          case (Options.Dummy === 'none'):\n            originalEvent.dataTransfer.setDragImage(DragImage,0,0)\n            setTimeout(() => { // remove element after browser took its snapshot\n              document.body.removeChild(DragImage as HTMLElement)\n            },0)\n            break\n          case ValueIsString(Options.Dummy):\n            originalEvent.dataTransfer.setDragImage(DragImage, OffsetX,OffsetY)\n            setTimeout(() => { // remove element after browser took its snapshot\n              document.body.removeChild(\n                (DragImage as HTMLElement).parentElement as HTMLElement\n              )\n            },0)\n            break\n          default:\n            originalEvent.dataTransfer.setDragImage(DragImage, OffsetX,OffsetY)\n        }\n      }\n\n      if (originalEvent.dataTransfer != null) {\n        originalEvent.dataTransfer.effectAllowed = 'none'\n      }\n\n      isDragged = true\n      setTimeout(() => Element.classList.add('dragged'), 0)\n\n      originalEvent.stopPropagation()\n    }\n\n  /**** continueDragging ****/\n\n    function continueDragging (originalEvent:DragEvent) {\n      if (! isDragged) { return false }\n\n      let Options = currentDraggableOptions\n\n      if (\n        (originalEvent.screenX === 0) && (originalEvent.screenY === 0) &&\n        ! PositioningWasDelayed\n      ) {\n        PositioningWasDelayed = true // last \"drag\" event contains wrong coord.s\n      } else {\n        PositioningWasDelayed = false\n\n        let relativePosition = Conversion.fromDocumentTo(\n          'local', { left:originalEvent.pageX, top:originalEvent.pageY }, PositionReference\n        )                                       // relative to reference element\n\n        let x  = relativePosition.left + ReferenceDeltaX  // in user coordinates\n        let y  = relativePosition.top  + ReferenceDeltaY\n\n        x = constrained(x, Options.minX,Options.maxX)\n        y = constrained(y, Options.minY,Options.maxY)\n\n        let dx = x - lastPosition.x         // calculated AFTER constraining x,y\n        let dy = y - lastPosition.y                                      // dto.\n\n        lastPosition = { x,y }\n\n        invokeHandler('onDragMove', Options, x,y, dx,dy, Options.Extras)\n      }\n\n      originalEvent.stopPropagation()\n    }\n\n  /**** finishDragging ****/\n\n    function finishDragging (originalEvent:DragEvent) {\n      if (! isDragged) { return false }\n\n//    continueDragging(originalEvent)           // NO! positions might be wrong!\n\n      let Options = currentDraggableOptions\n\n      if (Options.onDragEnd != null) {\n        let x = constrained(lastPosition.x, Options.minX,Options.maxX)\n        let y = constrained(lastPosition.y, Options.minY,Options.maxY)\n\n        let dx = x - lastPosition.x\n        let dy = y - lastPosition.y\n\n        invokeHandler('onDragEnd', Options, x,y, dx,dy, Options.Extras)\n      }\n\n      isDragged = false\n      Element.classList.remove('dragged')\n\n      originalEvent.stopPropagation()\n    }\n\n  /**** updateDraggableOptions ****/\n\n    function updateDraggableOptions (Options:any):void {\n      Options = parsedDraggableOptions(Options)\n\n      currentDraggableOptions.Dummy = (\n        Options.Dummy || currentDraggableOptions.Dummy\n      )\n\n      currentDraggableOptions.minX = Options.minX\n      currentDraggableOptions.minY = Options.minY\n      currentDraggableOptions.maxX = Options.maxX\n      currentDraggableOptions.maxY = Options.maxY\n\n      currentDraggableOptions.onDragStart = (\n        Options.onDragStart || currentDraggableOptions.onDragStart\n      )           // may be used to update initial position for subsequent drags\n    }\n\n    Element.setAttribute('draggable','true')\n\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragstart', startDragging)\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drag',      continueDragging)\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragend',   finishDragging)\n\n    return { update:updateDraggableOptions }\n  }\n\n/**** fromForbiddenElement ****/\n\n  function fromForbiddenElement (\n    Element:HTMLElement|SVGElement, Options:DraggableOptions,\n    originalEvent:DragEvent\n  ):boolean {\n    if ((Options.onlyFrom != null) || (Options.neverFrom != null)) {\n      let touchedElement = document.elementFromPoint(\n        originalEvent.clientX,originalEvent.clientY\n      ) as Element\n\n      let fromElement = touchedElement.closest(Options.onlyFrom as string)\n      if ((Element !== fromElement) && ! Element.contains(fromElement)) {\n        return true\n      }\n\n      fromElement = touchedElement.closest(Options.neverFrom as string)\n      if ((Element === fromElement) || Element.contains(fromElement)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n/**** extended Drag-and-Drop Support ****/\n\n  let currentDroppableExtras:any       // extras for currently dragged droppable\n  let currentDropZoneExtras:any        // extras for currently hovered drop zone\n  let currentDropZoneElement:Element|undefined                // dto. as Element\n\n  let DroppableWasDropped:boolean       // indicates a successful drop operation\n  let currentDropZonePosition:Position|undefined// position relative to DropZone\n  let currentDropOperation:DropOperation|undefined      // actual drop operation\n  let currentTypeTransferred:string|undefined // actual type of transferred data\n  let currentDataTransferred:any                      // actual data transferred\n\n//-------------------------------------------------------------------------------\n//--               use:asDroppable={options} - \"drag\" and \"drop\"               --\n//-------------------------------------------------------------------------------\n\n  export const DropOperations = [ 'copy', 'move', 'link' ]\n  export type  DropOperation  = typeof DropOperations[number]\n\n  export type DataOfferSet = { [Type:string]:string }\n\n  type DroppableOptions = DraggableOptions & {\n    Extras?:any,\n    Operations?:string,// consisting of 'copy', 'move', 'link' (blank-separated)\n    DataToOffer?:DataOfferSet,\n    onDropZoneEnter?: (x:number,y:number, DropZoneExtras:any, DroppableExtras:any) => void,\n    onDropZoneHover?: (x:number,y:number, DropZoneExtras:any, DroppableExtras:any) => void,\n    onDropZoneLeave?: (DropZoneExtras:any, DroppableExtras:any) => void,\n    onDropped?:       (x:number,y:number, Operation:DropOperation,\n                        TypeTransferred:string, DataTransferred:any,\n                        DropZoneExtras:any, DroppableExtras:any) => void,\n  }\n\n/**** parsedDroppableOptions ****/\n\n  function parsedDroppableOptions (Options:any):DroppableOptions {\n    Options = allowedPlainObject('drop options',Options) || {}\n\n    let Extras:any, Operations:string, DataToOffer:DataOfferSet\n    let onDropZoneEnter:Function, onDropZoneHover:Function, onDropZoneLeave:Function\n    let onDropped:Function\n\n    Extras = Options.Extras\n\n    Operations  = parsedOperations('list of allowed operations',Options.Operations,'copy')\n    DataToOffer = Object.assign(\n      {}, allowedPlainObject('data to be offered',Options.DataToOffer)\n    )\n\n    onDropZoneEnter = allowedFunction('\"onDropZoneEnter\" handler',Options.onDropZoneEnter)\n    onDropZoneHover = allowedFunction('\"onDropZoneHover\" handler',Options.onDropZoneHover)\n    onDropZoneLeave = allowedFunction('\"onDropZoneLeave\" handler',Options.onDropZoneLeave)\n    onDropped       = allowedFunction('\"onDropped\" handler',      Options.onDropped)\n\n    return {\n      Extras, Operations, DataToOffer,\n// @ts-ignore we cannot validate given functions any further\n      onDropZoneEnter, onDropZoneHover, onDropZoneLeave, onDropped\n    }\n  }\n\n/**** use:asDroppable={options} ****/\n\n  export function asDroppable (\n    Element:HTMLElement|SVGElement, Options:DroppableOptions\n  ) {\n    let isDragged:boolean\n    let currentDraggableOptions:DraggableOptions\n    let currentDroppableOptions:DroppableOptions\n\n    let PositionReference:Element         // element with user coordinate system\n    let ReferenceDeltaX:number, ReferenceDeltaY:number  // mouse -> user coord.s\n    let PositioningWasDelayed:boolean // workaround for prob. with \"drag\" events\n    let DragImage:Element | undefined\n    let initialPosition:Position                    // given in user coordinates\n    let lastPosition:   Position                                         // dto.\n\n    let lastDropZoneElement:HTMLElement|SVGElement|undefined\n    let lastDropZoneExtras:any\n\n    isDragged = false\n\n    currentDraggableOptions = parsedDraggableOptions(Options)\n    currentDroppableOptions = parsedDroppableOptions(Options)\n\n  /**** startDragging ****/\n\n    function startDragging (originalEvent:DragEvent) {\n      let Options = Object.assign(\n        {}, currentDraggableOptions, currentDroppableOptions\n      )\n\n      if (fromForbiddenElement(Element,Options,originalEvent)) {\n        originalEvent.stopPropagation()\n        originalEvent.preventDefault()\n        return false\n      }\n\n      PositionReference = PositionReferenceFor(Element,Options)\n\n      let relativePosition = Conversion.fromDocumentTo(\n        'local', { left:originalEvent.pageX, top:originalEvent.pageY }, PositionReference\n      )                                         // relative to reference element\n\n      ReferenceDeltaX = ReferenceDeltaY = 0; initialPosition = { x:0,y:0 }\n      if (Options.onDragStart == null) {\n        initialPosition = { x:0,y:0 }               // given in user coordinates\n      } else {\n        try {\n          let StartPosition = (Options.onDragStart as Function)(Options.Extras)\n          if (ValueIsPlainObject(StartPosition)) {\n            let x = allowedFiniteNumber('x start position',StartPosition.x)\n            let y = allowedFiniteNumber('y start position',StartPosition.y)\n\n            ReferenceDeltaX = x - relativePosition.left\n            ReferenceDeltaY = y - relativePosition.top\n\n            x = constrained(x, Options.minX,Options.maxX)\n            y = constrained(y, Options.minY,Options.maxY)\n\n            initialPosition = { x,y }               // given in user coordinates\n          }\n        } catch (Signal) {\n          console.error('\"onDragStart\" handler failed',Signal)\n        }\n      }\n\n      lastPosition        = initialPosition\n      lastDropZoneElement = undefined\n      lastDropZoneExtras  = undefined\n\n      PositioningWasDelayed = false                    // initializes workaround\n\n      if (Options.Dummy == null) {\n        Options.Dummy = 'standard'  // this is the default for \"use.asDroppable\"\n      }\n\n      DragImage = DragImageFor(Element,Options)\n      if ((DragImage != null) && (originalEvent.dataTransfer != null)) {\n        let OffsetX = Options.DummyOffsetX as number\n        let OffsetY = Options.DummyOffsetY as number\n\n        if ((OffsetX == null) || (OffsetY == null)) {\n          let PositionInDraggable = Conversion.fromDocumentTo(\n            'local', { left:originalEvent.pageX, top:originalEvent.pageY }, Element\n          )\n\n          if (OffsetX == null) { OffsetX = PositionInDraggable.left }\n          if (OffsetY == null) { OffsetY = PositionInDraggable.top }\n        }\n\n        switch (true) {\n          case (Options.Dummy === 'none'):\n            originalEvent.dataTransfer.setDragImage(DragImage,0,0)\n            setTimeout(() => { // remove element after browser took its snapshot\n              document.body.removeChild(DragImage as HTMLElement)\n            },0)\n            break\n          case ValueIsString(Options.Dummy):\n            originalEvent.dataTransfer.setDragImage(DragImage, OffsetX,OffsetY)\n            setTimeout(() => { // remove element after browser took its snapshot\n              document.body.removeChild(\n                (DragImage as HTMLElement).parentElement as HTMLElement\n              )\n            },0)\n            break\n          default:\n            originalEvent.dataTransfer.setDragImage(DragImage, OffsetX,OffsetY)\n        }\n      }\n\n      if (originalEvent.dataTransfer != null) {\n        let allowedEffects = allowedEffectsFrom(Options.Operations as string)\n        originalEvent.dataTransfer.effectAllowed = allowedEffects\n\n        if (ObjectIsNotEmpty(Options.DataToOffer)) {\n          for (let Type in Options.DataToOffer) {\n            if (Options.DataToOffer.hasOwnProperty(Type)) {\n              originalEvent.dataTransfer.setData(\n                Type, Options.DataToOffer[Type]\n              )\n            }\n          }\n        }\n      }\n\n      currentDroppableExtras  = Options.Extras\nconsole.log('startDragging',currentDroppableExtras)\n      currentDropZoneExtras   = undefined\n      currentDropZonePosition = undefined\n\n      DroppableWasDropped     = false\n      currentDropOperation    = undefined\n      currentTypeTransferred  = undefined\n      currentDataTransferred  = undefined\n\n      isDragged = true\n      setTimeout(() => Element.classList.add('dragged'), 0)\n\n      originalEvent.stopPropagation()\n    }\n\n  /**** continueDragging ****/\n\n    function continueDragging (originalEvent:DragEvent) {\n      if (! isDragged) { return false }\n\n      let Options = Object.assign(\n        {}, currentDraggableOptions, currentDroppableOptions\n      )\n\n      if (\n        (originalEvent.screenX === 0) && (originalEvent.screenY === 0) &&\n        ! PositioningWasDelayed\n      ) {\n        PositioningWasDelayed = true // last \"drag\" event contains wrong coord.s\n      } else {\n        PositioningWasDelayed = false\n\n        let relativePosition = Conversion.fromDocumentTo(\n          'local', { left:originalEvent.pageX, top:originalEvent.pageY }, PositionReference\n        )                                       // relative to reference element\n\n        let x  = relativePosition.left + ReferenceDeltaX  // in user coordinates\n        let y  = relativePosition.top  + ReferenceDeltaY\n\n        x = constrained(x, Options.minX,Options.maxX)\n        y = constrained(y, Options.minY,Options.maxY)\n\n        let dx = x - lastPosition.x         // calculated AFTER constraining x,y\n        let dy = y - lastPosition.y                                      // dto.\n\n        lastPosition = { x,y }\n\n        invokeHandler('onDragMove', Options, x,y, dx,dy, Options.Extras)\n      }\n\n      if (currentDropZoneElement === lastDropZoneElement) {\n        if (currentDropZoneElement != null) {\n          invokeHandler(\n            'onDropZoneHover', Options,\n            (currentDropZonePosition as Position).x,(currentDropZonePosition as Position).y,\n            currentDropZoneExtras, Options.Extras\n          )\n        }\n      } else {\n        if (currentDropZoneElement == null) {\n          Element.classList.remove('droppable')\n          invokeHandler('onDropZoneLeave', Options, lastDropZoneExtras, Options.Extras)\n        } else {\n          Element.classList.add('droppable')\n          invokeHandler(\n            'onDropZoneEnter', Options,\n            (currentDropZonePosition as Position).x,(currentDropZonePosition as Position).y,\n            lastDropZoneExtras, Options.Extras\n          )\n        }\n\n        lastDropZoneElement = currentDropZoneElement as HTMLElement\n        lastDropZoneExtras  = currentDropZoneExtras\n      }\n\n      originalEvent.stopPropagation()\n    }\n\n  /**** finishDragging ****/\n\n    function finishDragging (originalEvent:DragEvent) {\n      if (! isDragged) { return false }\n\n//    continueDragging(originalEvent)           // NO! positions might be wrong!\n\n      let Options = Object.assign(\n        {}, currentDraggableOptions, currentDroppableOptions\n      )\n\n      if (DroppableWasDropped) {\n        invokeHandler(\n          'onDropped', Options,\n          (currentDropZonePosition as Position).x,(currentDropZonePosition as Position).y,\n          currentDropOperation, currentTypeTransferred, currentDataTransferred,\n          currentDropZoneExtras, Options.Extras\n        )\n\n        currentDropZoneExtras   = undefined\n        currentDropZonePosition = undefined\n\n        DroppableWasDropped     = false\n        currentDropOperation    = undefined\n        currentTypeTransferred  = undefined\n        currentDataTransferred  = undefined\n      }\n\n      if (Options.onDragEnd != null) {\n        let x = constrained(lastPosition.x, Options.minX,Options.maxX)\n        let y = constrained(lastPosition.y, Options.minY,Options.maxY)\n\n        let dx = x - lastPosition.x\n        let dy = y - lastPosition.y\n\n        invokeHandler('onDragEnd', Options, x,y, dx,dy, Options.Extras)\n      }\n\nconsole.log('finishDragging',currentDroppableExtras)\n      currentDroppableExtras = undefined\n\n      isDragged = false\n      Element.classList.remove('dragged','droppable')\n\n      originalEvent.stopPropagation()\n    }\n\n  /**** updateDraggableOptions ****/\n\n    function updateDraggableOptions (Options:any):void {\n      Options = parsedDraggableOptions(Options)\n\n      currentDraggableOptions.Dummy = (\n        Options.Dummy || currentDraggableOptions.Dummy\n      )\n\n      currentDraggableOptions.minX = Options.minX\n      currentDraggableOptions.minY = Options.minY\n      currentDraggableOptions.maxX = Options.maxX\n      currentDraggableOptions.maxY = Options.maxY\n\n      currentDraggableOptions.onDragStart = (\n        Options.onDragStart || currentDraggableOptions.onDragStart\n      )           // may be used to update initial position for subsequent drags\n    }\n\n  /**** updateDroppableOptions ****/\n\n    function updateDroppableOptions (Options:any):void {\n      Options = parsedDroppableOptions(Options)\n\n      if (Options.Extras != null) {\n        currentDroppableOptions.Extras = Options.Extras\n      }\n    }\n\n    Element.setAttribute('draggable','true')\n\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragstart', startDragging)\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drag',      continueDragging)\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragend',   finishDragging)\n\n    return {\n      update:(Options:any) => {\n        updateDraggableOptions(Options)\n        updateDroppableOptions(Options)\n      }\n    }\n  }\n\n//-------------------------------------------------------------------------------\n//--                 use:asDropZone={options} - for drop zones                 --\n//-------------------------------------------------------------------------------\n\n  export type TypeAcceptanceSet = { [Type:string]:string }\n                   // values consist of 'copy', 'move', 'link' (blank-separated)\n  type DropZoneOptions = {\n    Extras?:any,\n    TypesToAccept?:TypeAcceptanceSet,\n    HoldDelay?:number,\n    onDroppableEnter?:(x:number,y:number, Operation:DropOperation, offeredTypeList:string[],\n                        DroppableExtras:any, DropZoneExtras:any) => boolean|undefined,\n    onDroppableMove?: (x:number,y:number, Operation:DropOperation, offeredTypeList:string[],\n                        DroppableExtras:any, DropZoneExtras:any) => boolean|undefined,\n    onDroppableHold?: (x:number,y:number, DroppableExtras:any, DropZoneExtras:any) => void,\n    onDroppableLeave?:(DroppableExtras:any, DropZoneExtras:any) => void,\n    onDrop?:          (x:number,y:number, Operation:DropOperation, DataOffered:any,\n                        DroppableExtras:any, DropZoneExtras:any) => string,\n  }\n\n/**** parsedDropZoneOptions ****/\n\n  function parsedDropZoneOptions (Options:any):DropZoneOptions {\n    Options = allowedPlainObject('drop zone options',Options) || {}\n\n    let Extras:any, TypesToAccept:TypeAcceptanceSet, HoldDelay:number\n    let onDroppableEnter:Function, onDroppableMove:Function, onDroppableLeave:Function\n    let onDroppableHold:Function, onDroppableRelease:Function, onDrop:Function\n\n    Extras = Options.Extras\n\n    allowPlainObject('data types to be accepted',Options.TypesToAccept)\n    TypesToAccept = Object.create(null)\n      for (let Type in Options.TypesToAccept) {\n        if (Options.TypesToAccept.hasOwnProperty(Type)) {\n          TypesToAccept[Type] = parsedOperations(\n            'list of accepted operations for type ' + quoted(Type),\n            Options.TypesToAccept[Type]\n          )\n        }\n      }\n    HoldDelay = allowedIntegerInRange('min. time to hold',Options.HoldDelay, 0) as number\n\n    onDroppableEnter   = allowedFunction('\"onDroppableEnter\" handler',  Options.onDroppableEnter)\n    onDroppableMove    = allowedFunction('\"onDroppableMove\" handler',   Options.onDroppableMove)\n    onDroppableLeave   = allowedFunction('\"onDroppableLeave\" handler',  Options.onDroppableLeave)\n    onDroppableHold    = allowedFunction('\"onDroppableHold\" handler',   Options.onDroppableHold)\n    onDroppableRelease = allowedFunction('\"onDroppableRelease\" handler',Options.onDroppableRelease)\n    onDrop             = allowedFunction('\"onDrop\" handler',            Options.onDrop)\n\n    return {\n      Extras, TypesToAccept, HoldDelay,\n// @ts-ignore we cannot validate given functions any further\n      onDroppableEnter, onDroppableMove, onDroppableLeave,\n// @ts-ignore we cannot validate given functions any further\n      onDroppableHold, onDroppableRelease, onDrop\n    }\n  }\n\n/**** use:asDropZone={options} ****/\n\n  export function asDropZone (\n    Element:HTMLElement|SVGElement, Options:DropZoneOptions\n  ) {\n    let currentDropZoneOptions:DropZoneOptions\n\n    currentDropZoneOptions = parsedDropZoneOptions(Options)\n\n  /**** enteredByDroppable ****/\n\n    function enteredByDroppable (originalEvent:DragEvent) {\nconsole.log('enteredByDroppable',currentDroppableExtras)\n      if (\n        (originalEvent.dataTransfer == null) ||\n        (originalEvent.dataTransfer.effectAllowed === 'none')\n      ) { return }\n\n      let Options = currentDropZoneOptions\n\n      let wantedOperation:any = originalEvent.dataTransfer.dropEffect\n      if (wantedOperation === 'none') {            // workaround for browser bug\n        switch (originalEvent.dataTransfer.effectAllowed) {\n          case 'copy': case 'move': case 'link':\n            wantedOperation = originalEvent.dataTransfer.effectAllowed; break\n          default:\n            wantedOperation = undefined\n        }\n      }\n\n      let TypesToAccept   = Options.TypesToAccept as TypeAcceptanceSet\n      let offeredTypeList = originalEvent.dataTransfer.types.filter((Type) =>\n        (Type in TypesToAccept) &&\n        (TypesToAccept[Type] !== '')          // \"getData\" is not available here\n      ) // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n      if (offeredTypeList.length === 0) { return }\n\n      let DropZonePosition = asPosition(Conversion.fromDocumentTo(\n        'local', { left:originalEvent.pageX, top:originalEvent.pageY }, Element\n      ))                                         // relative to DropZone element\n\n      let accepted:boolean|undefined = ResultOfHandler(\n        'onDroppableEnter', Options,\n        DropZonePosition.x, DropZonePosition.y,\n        wantedOperation, offeredTypeList, currentDroppableExtras, Options.Extras\n      )\n\n      if (accepted === false) {         // i.e. explicit \"false\" result required\n        return\n      } else {\n        currentDropZoneExtras   = Options.Extras\n        currentDropZoneElement  = Element\n        currentDropZonePosition = DropZonePosition\n\n        Element.classList.add('hovered')\n\n        originalEvent.preventDefault()\n        originalEvent.stopPropagation()\n      }\n    }\n\n  /**** hoveredByDroppable ****/\n\n    function hoveredByDroppable (originalEvent:DragEvent) {\nconsole.log('hoveredByDroppable',currentDroppableExtras)\n      if (\n        (originalEvent.dataTransfer == null) ||\n        (originalEvent.dataTransfer.effectAllowed === 'none') ||\n        (currentDropZoneElement != null) && (currentDropZoneElement !== Element)\n      ) {\n        Element.classList.remove('hovered')\n        return\n      }\n\n// in some browsers, it may be that (currentDropZone !== Element)!\n\n      let Options = currentDropZoneOptions\n\n      let wantedOperation:any = originalEvent.dataTransfer.dropEffect\n      if (wantedOperation === 'none') {            // workaround for browser bug\n        switch (originalEvent.dataTransfer.effectAllowed) {\n          case 'copy': case 'move': case 'link':\n            wantedOperation = originalEvent.dataTransfer.effectAllowed; break\n          default:\n            wantedOperation = undefined\n        }\n      }\n\n      let TypesToAccept   = Options.TypesToAccept as TypeAcceptanceSet\n      let offeredTypeList = originalEvent.dataTransfer.types.filter((Type) =>\n        (Type in TypesToAccept) &&\n        (TypesToAccept[Type] !== '')          // \"getData\" is not available here\n      ) // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n      if (offeredTypeList.length === 0) {\n        if (currentDropZoneElement === Element) {\n          currentDropZoneExtras   = undefined\n          currentDropZoneElement  = undefined\n          currentDropZonePosition = undefined\n        }\n\n        Element.classList.remove('hovered')\n        return\n      }\n\n      currentDropZonePosition = asPosition(Conversion.fromDocumentTo(\n        'local', { left:originalEvent.pageX, top:originalEvent.pageY }, Element\n      ))                                         // relative to DropZone element\n\n      let accepted = ResultOfHandler(\n        'onDroppableMove', Options,\n        currentDropZonePosition.x, currentDropZonePosition.y,\n        wantedOperation, offeredTypeList, currentDroppableExtras, Options.Extras\n      )\n\n      if (accepted === false) {         // i.e. explicit \"false\" result required\n        currentDropZoneExtras   = undefined\n        currentDropZoneElement  = undefined\n        currentDropZonePosition = undefined\n\n        Element.classList.remove('hovered')\n      } else {              // warning: sometimes (currentDropZone !== Element)!\n        currentDropZoneExtras   = Options.Extras\n        currentDropZoneElement  = Element\n//      currentDropZonePosition has already been set before\n\n        Element.classList.add('hovered')\n\n        originalEvent.preventDefault()            // never allow default action!\n//      originalEvent.stopPropagation()\n\n        return false          // special return value when drop seems acceptable\n      }\n    }\n\n  /**** leftByDroppable ****/\n\n    function leftByDroppable (originalEvent:DragEvent) {\nconsole.log('leftByDroppable',currentDroppableExtras)\n      Element.classList.remove('hovered')\n\n      let Options = currentDropZoneOptions\n\n      if (currentDropZoneElement === Element) {\n        if (currentTypeTransferred == null) {           // see explanation below\n          currentDropZoneExtras   = undefined\n          currentDropZoneElement  = undefined\n\n          DroppableWasDropped     = false\n          currentDropZonePosition = undefined\n          currentTypeTransferred  = undefined\n          currentDataTransferred  = undefined\n\n          invokeHandler('onDroppableLeave', Options, currentDroppableExtras, Options.Extras)\n        }                   // swallow \"dragleave\" right after successful \"drop\"\n\n        originalEvent.preventDefault()\n        originalEvent.stopPropagation()\n      }\n    }\n\n  /**** droppedByDroppable ****/\n\n    function droppedByDroppable (originalEvent:DragEvent) {\nconsole.log('droppedByDroppable',currentDroppableExtras)\n      Element.classList.remove('hovered')\n\n      if (\n        (originalEvent.dataTransfer == null) ||\n        (originalEvent.dataTransfer.effectAllowed === 'none') ||\n        (currentDropZoneElement !== Element)\n      ) { return }\n\n//    originalEvent.preventDefault()\n      originalEvent.stopPropagation()\n\n      let Options = currentDropZoneOptions\n\n      let wantedOperation:any = originalEvent.dataTransfer.dropEffect\n      if (wantedOperation === 'none') {            // workaround for browser bug\n        switch (originalEvent.dataTransfer.effectAllowed) {\n          case 'copy': case 'move': case 'link':\n            wantedOperation = originalEvent.dataTransfer.effectAllowed; break\n          default:\n            wantedOperation = undefined\n        }\n      }\n\n      let TypesToAccept   = Options.TypesToAccept as TypeAcceptanceSet\n      let offeredTypeList = originalEvent.dataTransfer.types.filter((Type) =>\n        (Type in TypesToAccept) && (\n          (wantedOperation == null) ||\n          (TypesToAccept[Type].indexOf(wantedOperation) >= 0)\n        )\n      ) // cannot use \"originalEvent.dataTransfer.dropEffect\" due to browser bug\n      if (offeredTypeList.length === 0) {\n        currentDropZoneExtras   = undefined\n        currentDropZonePosition = undefined\n\n        DroppableWasDropped     = false\n        currentDropOperation    = undefined\n        currentTypeTransferred  = undefined\n        currentDataTransferred  = undefined\n\n        invokeHandler('onDroppableLeave', Options, currentDroppableExtras, Options.Extras)\n\n        return\n      }\n\n      currentDropZonePosition = asPosition(Conversion.fromDocumentTo(\n        'local', { left:originalEvent.pageX, top:originalEvent.pageY }, Element\n      ))                                         // relative to DropZone element\n\n      let offeredData:any = {}\n        offeredTypeList.forEach(\n// @ts-ignore originalEvent.dataTransfer definitely exists\n          (Type) => offeredData[Type] = originalEvent.dataTransfer.getData(Type)\n        )\n      let acceptedType = ResultOfHandler(\n        'onDrop', Options,\n        currentDropZonePosition.x, currentDropZonePosition.y,\n        wantedOperation, offeredData, currentDroppableExtras, Options.Extras\n      )\n\n      switch (true) {\n        case (acceptedType == null):\n          DroppableWasDropped    = true\n          currentDropOperation   = wantedOperation\n          currentTypeTransferred = undefined\n          currentDataTransferred = undefined\n          break\n        case ValueIsOneOf(acceptedType,offeredTypeList):\n          DroppableWasDropped    = true\n          currentDropOperation   = wantedOperation\n          currentTypeTransferred = acceptedType\n          currentDataTransferred = offeredData[acceptedType]\n          break\n        default:               // handler should return false in case of failure\n          DroppableWasDropped     = false\n          currentDropZoneExtras   = undefined\n          currentDropZonePosition = undefined\n          currentDropOperation    = undefined\n          currentTypeTransferred  = undefined\n          currentDataTransferred  = undefined\n\n//        invokeHandler('onDroppableLeave', Options, currentDroppableExtras, Options.Extras)\n      }\n\n      currentDropZoneElement = undefined\n    }\n\n  /**** updateDropZoneOptions ****/\n\n    function updateDropZoneOptions (Options:any):void {\n      Options = parsedDropZoneOptions(Options)\n\n      if (Options.Extras != null) {\n        currentDropZoneOptions.Extras = Options.Extras\n      }\n\n      if (ObjectIsNotEmpty(Options.TypesToAccept)) {\n        currentDropZoneOptions.TypesToAccept = Options.TypesToAccept\n      }\n\n      if (Options.HoldDelay != null) {\n        currentDropZoneOptions.HoldDelay = Options.HoldDelay\n      }\n    }\n\n    Element.setAttribute('draggable','true')\n\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragenter', enteredByDroppable)\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragover',  hoveredByDroppable)\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('dragleave', leftByDroppable)\n// @ts-ignore we know that the passed event is a DragEvent\n    Element.addEventListener('drop',      droppedByDroppable)\n\n    return { update:updateDropZoneOptions }\n  }\n\n/**** ValueIsPosition ****/\n\n  function ValueIsPosition (Candidate:any):boolean {\n    return (\n      ValueIsPlainObject(Candidate) &&\n      ValueIsFiniteNumber(Candidate.x) && ValueIsFiniteNumber(Candidate.y)\n    )\n  }\n\n/**** asPosition ****/\n\n  function asPosition (Value:any):Position {\n    return { x:Value.left, y:Value.top }\n  }\n\n/**** PositionReferenceFor ****/\n\n  function PositionReferenceFor (\n    Element:HTMLElement|SVGElement,\n    Options:DraggableOptions|DroppableOptions\n  ):Element {\n    let PositionReference:Element | undefined | null\n      switch (true) {\n        case (Options.relativeTo === 'parent'):\n          PositionReference = Element.parentElement\n          break\n        case (Options.relativeTo === 'body'):\n          PositionReference = document.body\n          break\n        case (Options.relativeTo instanceof HTMLElement):\n        case (Options.relativeTo instanceof SVGElement):\n  //    case (Options.relativeTo instanceof MathMLElement):\n          PositionReference = Options.relativeTo as Element\n          if (\n            (PositionReference != document.body) &&\n            ! document.body.contains(PositionReference)\n          ) throwError(\n            'InvalidArgument: the HTML element given as \"relativeTo\" option ' +\n            'is not part of this HTML document'\n          )\n          break\n        default:                                                 // CSS selector\n          PositionReference = Element.closest(Options.relativeTo as string)\n      }\n    return (PositionReference == null ? document.body : PositionReference)\n  }\n\n/**** DragImageFor ****/\n\n  function DragImageFor (\n    Element:HTMLElement|SVGElement,\n    Options:DraggableOptions|DroppableOptions\n  ):Element|undefined {\n    switch (true) {\n      case (Options.Dummy === 'standard'):\n        return undefined\n      case (Options.Dummy === 'none'):\n        let invisibleDragImage = document.createElement('div')\n          invisibleDragImage.setAttribute('style',\n            'display:block; position:absolute; width:1px; height:1px; ' +\n            'background:transparent; border:none; margin:0px; padding:0px; ' +\n            'cursor:auto'\n          )\n          document.body.appendChild(invisibleDragImage)\n        return invisibleDragImage\n      case ValueIsNonEmptyString(Options.Dummy):          // may flicker shortly\n        let auxiliaryElement = document.createElement('div')\n          auxiliaryElement.style.display  = 'block'\n          auxiliaryElement.style.position = 'absolute'\n          auxiliaryElement.style.left     = (document.body.scrollWidth + 100)+'px'\n\n          document.body.appendChild(auxiliaryElement)\n\n          auxiliaryElement.innerHTML = Options.Dummy as string\n        return auxiliaryElement.children[0]\n      case (Options.Dummy instanceof HTMLElement):\n      case (Options.Dummy instanceof SVGElement):\n//    case (Options.Dummy instanceof MathMLElement):\n        return Options.Dummy as Element\n      case ValueIsFunction(Options.Dummy):\n        let Candidate:HTMLElement | SVGElement | undefined = undefined\n        try {\n          Candidate = (Options.Dummy as Function)(Options.Extras, Element)\n        } catch (Signal) {\n          console.error('RuntimeError: creating draggable dummy failed',Signal)\n        }\n\n        if (Candidate != null) {\n          if ((Candidate instanceof HTMLElement) || (Candidate instanceof SVGElement)) {\n            return Candidate\n          } else {\n            console.error(\n              'InvalidArgument: the newly created draggable dummy is ' +\n              'neither an HTML nor an SVG element'\n            )\n          }\n        }\n    }\n  }\n\n/**** parsedOperations ****/\n\n  function parsedOperations (\n    Description:string, Argument:any, Default:string='copy move link'\n  ):string {\n    let Operations = allowedString(Description,Argument) || Default\n\n    switch (Operations.trim()) {\n      case 'all':  return 'copy move link'\n      case 'none': return ''\n    }\n\n    let OperationList = Operations.trim().replace(/\\s+/g,' ').split(' ')\n      allowListSatisfying(\n        Description,OperationList,\n        (Operation:string) => ValueIsOneOf(Operation,DropOperations)\n      )\n    return OperationList.reduce(\n      (Result:string, Operation:string) => (\n        Result.indexOf(Operation) < 0 ? Result + Operation + ' ': Result\n      ),' '\n    )\n  }\n\n/**** allowedEffectsFrom ****/\n\n  type allowedEffects = (\n    'none'|'copy'|'copyLink'|'copyMove'|'link'|'linkMove'|'move'|'all'\n  )\n\n  function allowedEffectsFrom (Operations:string):allowedEffects {\n    let EffectIndex = (                                       // Horner's method\n      (Operations.indexOf('move') < 0 ? 0 : 1) * 2 +\n      (Operations.indexOf('link') < 0 ? 0 : 1)\n    ) * 2 +\n    (Operations.indexOf('copy') < 0 ? 0 : 1)\n\n    return [\n      'none','copy','link','copyLink','move','copyMove','linkMove','all'\n    ][EffectIndex] as allowedEffects\n  }\n\n/**** invokeHandler ****/\n\n  function invokeHandler (Name:string, Options:any, ...Arguments:any):any {\n    if (Options[Name] != null) {\n      try {\n        return Options[Name].apply(null,Arguments)\n      } catch (Signal) {\n        console.error(quoted(Name) + ' handler failed',Signal)\n      }\n    }\n  }\n  const ResultOfHandler = invokeHandler\n\n\n"],"names":["Conversion"],"mappings":"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"}